[tool.poetry]
name = "elasticai.creator"
version = "0.51.0"
description = "Design, train and compile neural networks optimized specifically for FPGAs."
readme = "README.md"
repository = "https://github.com/es-ude/elastic-ai.creator"
authors = ["Department Embedded Systems - University Duisburg Essen"]
packages = [
    { include = "elasticai/" }
]

[tool.poetry.dependencies]
python = "~3.11"
torch = ">=1.11 < 2.0.1" # missing libcurand.so shared object in 2.0.1 (try again with later versions)
numpy = "^1.23.0"
setuptools = "^67.5.1"
mypy = "^1.1.1"
pytest-cov = "^4.1.0"


[tool.poetry.dev-dependencies]
python-language-server = "^0.36.2"
black = ">21.12"
prospector = {extras = ["with_mypy"], version = "^1.7.7"}
pre-commit = "^3.0.0"
mypy = "^1.0.0"
wily = "^1.24.0"
import-linter = "^1.7.0"
impulse = "^1.0"
pylint = "^2.16.2"
pytest = "^7.2.2"
setuptools = "^67.5.1"


[tool.pylint]
max-line-length = 88
accept-no-raise-doc = "False"
disable="C0115, C0116, C0114" # disable missing docstring messages as they incourage adding noise comments


[tool.black]
preview = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = ["elasticai/creator/examples/*py", "elasticai/creator/tests/*py", "elasticai/creator/*Tests/*py", "elasticai/**/__init__.py"]
source = ["elasticai/creator"]
command_line = "-m unittest discover ."

[tool.importlinter]
root_package = "elasticai"
contract_types = [
"package_private_modules: import_contract.PackagePrivateModules"]

[[tool.importlinter.contracts]]
name = "package private"
type = "package_private_modules"
targets = ["elasticai.creator"]
sources = ["elasticai.creator"]


[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
major_on_zero = false
repository = "pypi"
upload_to_release = true
build_command = "python3 -m pip install poetry && poetry build"
branch = "main"
parser_angular_allowed_types="chore,docs,feat,style,fix,refactor,wip,perf,revert"
parser_angular_minor_types="feat"
parser_angular_patch_types="fix,perf"

[tool.isort]
profile = "black"
