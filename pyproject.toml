[tool.poetry]
name = "elasticai.creator"
version = "0.3.6-alpha.0"
description = "Design, train and compile neural networks optimized specifically for FPGAs."
readme = "README.md"
repository = "https://github.com/es-ude/elastic-ai.creator"
authors = ["Department Embedded Systems - University Duisburg Essen"]
packages = [
    { include = "elasticai/" }
]

[tool.poetry.dependencies]
python = "~3.9"
torch = "^1.10.0"
brevitas = { version = "^0.7.0", optional = true }
onnx = { version = "^1.10.2", optional = true }
onnxoptimizer = { version = "^0.2.6", optional = true }
torchvision = { version = "^0.11.2", optional = true }
MonkeyType = "^21.5.0"
bitarray = "^2.3.5"
vsg = "^3.9.0"

[tool.poetry.extras]
brevitas = ['brevitas', 'onnx', 'onnxoptimizer']
examples = ['torchvision']
systemtests = ['torchvision']

[tool.poetry.dev-dependencies]
python-language-server = "^0.36.2"
coverage = "^6.2"
flake8 = "*"
tox = "*"
black = ">21.12"
torchvision = "^0.11.2"


[tool.flake8]
max-line-length = 88
extended-ignore = ["E203"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = ["elasticai/examples/*py"]
source = ["elasticai"]
command_line = "-m unittest discover ."

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
major_on_zero = false
commit_parser = "emoji_parser"

