name: Test and Publish
on:
  push:
    branches:
      - ci-cd

jobs:
  unit-tests:
    uses: ./.github/workflows/unit_tests.yml
  integration-tests:
    uses: ./.github/workflows/integration_tests.yml

  # the jobs below are taken from the actions in https://github.com/relekang/python-semantic-release under MIT License
  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    concurrency: push
    needs: [ unit-tests, integration-tests ]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}

    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Black
        run: python -m pip install black

      - name: Beautify with Black
        run: python -m black .

      - name: Install isort
        run: python -m pip install "isort >=4,<5"

      - name: Sort imports
        run: python -m isort -y -rc .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: beautify ${{ github.sha }}'
          name: github-actions
          email: action@github.com

      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "::set-output name=SHA::$new_sha"

  bump-version:
    name: Bump Semantic Version
    runs-on: ubuntu-latest
    concurrency: push
    needs: [unit-tests, integration-tests, beautify]
    outputs:
      new_version: ${{ steps.version.outputs.VERSION }}
      new_sha: ${{ steps.sha.outputs.SHA }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ needs.beautify.outputs.new_sha }}
      - name: install relekang/python-semantic-release
        run: python3 -m pip install python-semantic-release
      - name: configure git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
      - name: bump version
        id: version
        run: |
          new_version=$(semantic-release print-version)
          echo "::set-output name=VERSION::$new_version"
          semantic-release version
      - name: push new version and tag
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: format('v{0}', ${{ steps.version.outputs.VERSION }})
          name: github-actions
          email: action@github.com
      - name: get new sha
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "::set-output name=SHA::$new_sha"


  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    concurrency: push
    needs: [unit-tests, integration-tests, beautify, bump-version]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.new_sha }}
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - uses: Gr1N/setup-poetry@v7
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: build
        run: poetry build
      - name: publish
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_ACCOUNT_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

